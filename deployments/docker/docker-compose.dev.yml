version: "3.8"

services:
  # Database
  postgres:
    image: pgvector/pgvector:pg16
    container_name: discord-rag-postgres
    environment:
      POSTGRES_USER: ragbot
      POSTGRES_PASSWORD: secure_password
      POSTGRES_DB: discord_rag
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ragbot -d discord_rag"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - discord-rag-network

  # Redis
  redis:
    image: redis:7-alpine
    container_name: discord-rag-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - discord-rag-network

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: discord-rag-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
    networks:
      - discord-rag-network

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: discord-rag-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - discord-rag-network

  # Jaeger
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: discord-rag-jaeger
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - discord-rag-network

  # Loki
  loki:
    image: grafana/loki:2.9.0
    container_name: discord-rag-loki
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki-config.yml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - discord-rag-network

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  discord-rag-network:
    driver: bridge
